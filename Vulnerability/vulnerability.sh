#!/bin/bash

# CRLF testing with crlfuzz
crlfuzz -l AllUrls.txt -o crlf_report.txt
echo -e "Subject: Crlfuzz is Completed\nNow ppfuzz is working.\n$(cat crlf_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

# Prototype Pollution testing with ppfuzz
ppfuzz -l AllUrls.txt -o ppfuzz_report.txt
# Only show vulnerable targets/suppress an errors:
ppfuzz -l AllUrls.txt 2>/dev/null -o ppfuzz_vulnerable_report.txt
echo -e "Subject: ppfuzz is Completed\nNow dalfox is working.\n$(cat ppfuzz_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

# XSS testing with Dalfox
dalfox file AllUrls.txt --custom-payload ./mypayloads.txt -o dalfox_report.txt
echo -e "Subject: Dalfox is Completed\nNow Oralyzer is working.\n$(cat dalfox_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

# Open redirect testing with Oralyzer
python3 oralyzer.py -l AllUrls.txt -o oralyzer_report.txt
echo -e "Subject: Oralyzer is Completed\nNow katana is working.\n$(cat oralyzer_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

# Broken links testing with katana
katana -list AllUrls.txt -o broken_links_report.txt
echo -e "Subject: katana is Completed\nNow GF is working.\n$(cat broken_links_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

# gf testing with waybackurls
cat AllUrls.txt | waybackurls | sort -u | tee waybackdata | gf ssrf | tee -a ssfrparams.txt | gf redirect | tee -a redirectparams.txt | gf rce | tee -a rceparams.txt | gf idor | tee -a idorparams.txt | gf sqli | tee -a sqli_params.txt | gf lfi | tee -a lfi_params.txt | gf ssti | tee -a ssti_params.txt | gf debug_logic | tee -a debug_logic_params.txt | gf xss | tee -a xss_params.txt
echo "Hello Chief, Here are the results of the various tasks of Subdomain enumeration." | mutt -s "Results of gf testing with waybackurls" -a "ssfrparams.txt" -a "redirectparams.txt" -a "rceparams.txt" -a "idorparams.txt" -a "sqli_params.txt" -a "lfi_params.txt" -a "ssti_params.txt" -a "debug_logic_params.txt" -a "xss_params.txt" -- binary0101devil@gmail.com

# SQLi testing with SQLMap
sqlmap -m AllUrls.txt --level=5 --risk=3 --batch --random-agent -o sql_injection_report.txt
echo -e "Subject: SQLMap is Completed\nNow ghauri is working.\n$(cat sql_injection_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

# SQLi testing with ghauri
ghauri -m AllUrls.txt --batch -o ghauri_report.txt
echo -e "Subject: ghauri is Completed\nNow Attachments of all vulnerablity scanning is Sending.\n$(cat ghauri_report.txt)" | msmtp -a gmail binary0101devil@gmail.com

echo "Hello Chief, Here are the results of the various tasks of Subdomain enumeration." | mutt -s "Results of All Attachments of all vulnerablity scanning" -a "crlf_report.txt" -a "ppfuzz_report.txt" -a "ppfuzz_vulnerable_report.txt" -a "dalfox_report.txt" -a "oralyzer_report.txt" -a "broken_links_report.txt" -a "sql_injection_report.txt" -a "ghauri_report.txt" -- binary0101devil@gmail.com
echo "All Task Done"
